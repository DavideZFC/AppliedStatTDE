n2 <- length(i2)
n3 <- length(i3)
n <- n1+n2+n3
precolom <- data[,1:2]
g <- 3
m <-  colMeans(precolom)
m1 <- colMeans(precolom[i1,])
m2 <- colMeans(precolom[i2,])
m3 <- colMeans(precolom[i3,])
S1 <- cov(precolom[i1,])
S2 <- cov(precolom[i2,])
S3 <- cov(precolom[i3,])
Sp  <- ((n1-1)*S1+(n2-1)*S2+(n3-1)*S3)/(n-g)
qda.prec <- qda(precolom, data$Civilization, prior = prior)
library(MASS)
qda.prec <- qda(precolom, data$Civilization, prior = prior)
Qda.prec$class
qda.prec <- qda(precolom, data$Civilization, prior = prior)
Qda.prec <- predict(qda.prec, precolom)
table(classe.vera=data$Civilization, classe.allocata=Qda.prec$class)
erroriq <- (Qda.iris$class != species.name)
erroriq <- (Qda.prec$class != data$Civilization)
erroriq
APERq   <- sum(erroriq)/length(precolom)
APERq
APERq   <- sum(erroriq)/length(precolom)
APERq
APERq   <- sum(erroriq)/length(data$Civilization)
APERq
table(classe.vera=data$Civilization, classe.allocata=Qda.prec$class)
misc <- table(classe.vera=species.name, classe.allocata=Lda.iris$class)
APER <- 0
misc <- table(classe.vera=data$Civilization, classe.allocata=Qda.prec$class)
APER <- 0
G <- 2
for(g in 1:G)
APER <- APER + sum(misc[g,-g])/sum(misc[g,]) * prior[g]
rm(APERq)
View(iris)
summary(data)
x  <- seq(min(precolom[,1]), max(precolom[,1]), length=200)
y  <- seq(min(precolom[,2]), max(precolom[,2]), length=200)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(qda.iris, xy)$post
z  <- predict(qda.prec, xy)$post
z1 <- z[,1] - pmax(z[,2], z[,3])
z2 <- z[,2] - pmax(z[,1], z[,3])
z3 <- z[,3] - pmax(z[,1], z[,2])
x11()
plot(precolom, pch=20)
points(precolom[i1,], col='red', pch=20)
points(precolom[i2,], col='green', pch=20)
points(precolom[i3,], col='blue', pch=20)
legend(min(precolom[,1]), max(precolom[,2]), legend=levels(species.name), fill=c('red','green','blue'))
points(qda.prec$means, col=c('red','green','blue'), pch=4, lwd=2, cex=1.5)
x  <- seq(min(precolom[,1]), max(precolom[,1]), length=200)
y  <- seq(min(precolom[,2]), max(precolom[,2]), length=200)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(qda.prec, xy)$post
z1 <- z[,1] - pmax(z[,2], z[,3])
z2 <- z[,2] - pmax(z[,1], z[,3])
z3 <- z[,3] - pmax(z[,1], z[,2])
contour(x, y, matrix(z1, 200), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z2, 200), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z3, 200), levels=0, drawlabels=F, add=T)
newdatum <- data.frame(Year = 986, Aspect.Ratio = 1.4)
predict(qda.prec, newdatum)
rm(list = ls())
data <- read.table("Hotels.txt")
head(data)
summary(data)
pos <- ifelse(data$Position == "Seafront", 1, 0)
season <- ifelse (data$Season == "WetSeason", 1, 0)
count(pos)
sum(pos)
sum(season)
pos:season
fit <- lm(Imm ~ pos:season + pos:season*(1 + cos(4*pi/365 * t)), data=data)
fit <- lm(price ~ pos:season + pos:season*(1 + cos(4*pi/365 * t)), data=data)
summary(fit)
fit <- lm(price ~ pos*season + pos:season*(1 + cos(4*pi/365 * t)), data=data)
summary(fit)
fit <- lm(price ~ pos*season + pos*season*(1 + cos(4*pi/365 * t)), data=data)
summary(fit)
dummy <- pos:season
dummy
data$dummy
data$dummy <- if(pos == 1 & season == 1, 1)
dim(data)[1]
data$dummy <- rep(0, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 & season[] == 0) data$dummy = 1
if(pos[i] == 1 & season[] == 0) data$dummy = 2
if(pos[i] == 0 & season[] == 1) data$dummy = 3
if(pos[i] == 1 & season[] == 1) data$dummy = 4
}
data$dummy <- as.factor(data$dummy)
View(data)
data$dummy <- rep(0, dim(data)[1])
View(data)
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 && season[] == 0) data$dummy = 1
if(pos[i] == 1 && season[] == 0) data$dummy = 2
if(pos[i] == 0 && season[] == 1) data$dummy = 3
if(pos[i] == 1 && season[] == 1) data$dummy = 4
}
data$dummy <- as.factor(data$dummy)
View(data)
data$dummy <- rep(0, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 && season[i] == 0) data$dummy = 1
if(pos[i] == 1 && season[i] == 0) data$dummy = 2
if(pos[i] == 0 && season[i] == 1) data$dummy = 3
if(pos[i] == 1 && season[i] == 1) data$dummy = 4
}
View(data)
data$dummy <- rep(0, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 && season[i] == 0) data$dummy = 1
if(pos[i] == 1 && season[i] == 0) data$dummy = 2
if(pos[i] == 0 && season[i] == 1) data$dummy = 3
if(pos[i] == 1 && season[i] == 1) data$dummy = 4
}
summary(data$dummy)
season[i]
pos[i]
i=1
pos[i]
season[i]
pos[i] == 0 && season[i] == 0
pos[i] == 1 && season[i] == 0
pos[i] == 0 && season[i] == 1
pos[i] == 1 && season[i] == 1
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 && season[i] == 0) data$dummy = 1
if(pos[i] == 1 && season[i] == 0) data$dummy = 2
if(pos[i] == 0 && season[i] == 1) data$dummy = 3
if(pos[i] == 1 && season[i] == 1) data$dummy = 4
}
1:dim(data)[1]
View(data)
data$dummy <- rep(1, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(data$Position == "Seafront") data$dummy = 2
if(data$Season == "WetSeason") data$dummy = 3
if(data$Position == "Seafront" && data$Season == "WetSeason") data$dummy = 4
}
warnings()
data$dummy <- rep(1, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(data$Position[i] == "Seafront") data$dummy = 2
if(data$Season[i] == "WetSeason") data$dummy = 3
if(data$Position[i] == "Seafront" && data$Season[i] == "WetSeason") data$dummy = 4
}
View(data)
for(i in 1:dim(data)[1])
{
if(data$Position[i] == "Seafront") data$dummy = 2
if(data$Season[i] == "WetSeason") data$dummy = 3
if(data$Position[i] == "Seafront" && data$Season[i] == "WetSeason") data$dummy = 4
}
View(data)
data$dummy <- rep(0, dim(data)[1])
for(i in 1:dim(data)[1])
{
if(pos[i] == 0 && season[i] == 0) data$dummy[i] = 1
if(pos[i] == 1 && season[i] == 0) data$dummy[i] = 2
if(pos[i] == 0 && season[i] == 1) data$dummy[i] = 3
if(pos[i] == 1 && season[i] == 1) data$dummy[i] = 4
}
data$dummy <- as.factor(data$dummy)
View(data)
fit <- lm(price ~ dummy + dummy*(1 + cos(4*pi/365 * t)), data=data)
summary(fit)
data$dummy <- as.factor(data$dummy)
fit <- lm(price ~ dummy + dummy*I(1 + cos(4*pi/365 * t)), data=data)
summary(fit)
75.597+35.915
75.597-31.689
75.597+1.636
74.745-8.988
74.745-9.065
74.745-9.769
coef(fit)
coef(fit)[0]
coef(fit)[0]
coef(fit)
fit$coefficients[0]
fit$coefficients[1]
coef(fit)[1]-coef(fit)[2]
coef(fit)[1]
coef(fit)[1]+coef(fit)[2]
coef(fit)[1]+coef(fit)[3]
coef(fit)[1]+coef(fit)[4]
coef(fit)[5]
coef(fit)[5]+coef(fit)[6]
coef(fit)[5]+coef(fit)[7]
coef(fit)[5]+coef(fit)[8]
summary(fit)
# b)
linearHypothesis(fit,
rbind(c(0,1,0,0,0,0,0,0),
c(0,0,0,1,0,0,0,0),
c(0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,1)),
c(0,0,0,0))
# b)
library(car)
linearHypothesis(fit,
rbind(c(0,1,0,0,0,0,0,0),
c(0,0,0,1,0,0,0,0),
c(0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,0,1)),
c(0,0,0,0))
summary(fit)
linearHypothesis(fit,
rbind(c(0,0,1,0,0,0,0,0),
c(0,1,0,-1,0,0,0,0),
c(0,0,0,0,0,0,1,0),
c(0,0,0,0,0,1,0,-1)),
c(0,0,0,0))
x11()
par(mfrow=c(2,2))
plot(fit)
shapiro.test(residuals(fit))
linearHypothesis(fit,
rbind(c(0,1,0,0,0,0,0,0),
c(0,0,1,-1,0,0,0,0),
c(0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,1,-1)),
c(0,0,0,0))
linearHypothesis(fit,
rbind(c(0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,1,0),
c(0,0,0,0,0,0,0,1)),
c(0,0,0))
linearHypothesis(fit,
rbind(c(0,0,1,0,0,0,0,0),
c(0,1,0,-1,0,0,0,0),
c(0,0,0,0,0,0,1,0),
c(0,0,0,0,0,1,0,-1)),
c(0,0,0,0))
linearHypothesis(fit,
rbind(c(0,0,0,0,0,1,0,0),
c(0,0,0,0,0,0,1,0),
c(0,0,0,0,0,0,0,1)),
c(0,0,0))
fitre <- lm(price ~ dummy + I(1 + cos(4*pi/365 * t)), data=data)
summary(fitre)
t0=0
newdatum <- data.frame(t=t0, dummy=2)
View(newdatum)
help(predict)
predict(fitre, newdata = newdatum, interval = "confidence")
newdatum <- data.frame(t=t0, dummy=as.factor(2))
predict(fitre, newdata = newdatum, interval = "confidence")
predict(fitre, newdata = newdatum, interval = "confidence", level = 0.99)
model.matrix(fitre)
Z = model.matrix(fitre)
res <- fitre$residuals
res
summary(fitre)
res <-
summary(fitre)[6]
res <-
summary(fitre)[6]
summary(fitre)[6]
summary(fitre)[6][1]
summary(fitre)$sigma
n <- dim(data)[1]
r <- summary(fitre)$dof
r <- summary(fitre)$
df.residual(fitre)
r <- summary(fitre)$
df.residual(fitre)
r <- summary(fitre)$
df.residual(fitre)
r <- summary(fitre)$df.residual
r <- fitre$df.residual
betas <- coefficients(fitre)
a <- [1, 1, 0, 0, 0]
a <- c(1, 1, 0, 0, 0)
a <- c(1,1,0,0,0)
a*betas
a%*%betas
invz <- solve(t(Z)%*%Z)
# d)
alpha <- 0.01
a%*%betas - s*sqrt(t(a)%*%invz%*%a)*sqrt((r+1)*qf(1-alpha,r+1,n-(r+1)))
s <- summary(fitre)$sigma
a%*%betas - s*sqrt(t(a)%*%invz%*%a)*sqrt((r+1)*qf(1-alpha,r+1,n-(r+1)))
IC <- rbind(
inf = a%*%betas - s*sqrt(t(a)%*%invz%*%a)*sqrt((r+1)*qf(1-alpha,r+1,n-(r+1))),
fit = a%*%betas,
sup = a%*%betas + s*sqrt(t(a)%*%invz%*%a)*sqrt((r+1)*qf(1-alpha,r+1,n-(r+1)))
)
IC
predict(fitre, newdata = newdatum, interval = "confidence", level = 1 - alpha)
IC
View(data)
summary(data$price[which(dummy==2)])
data$price[which(dummy==2)]
i1 <- which(data$dummy == 2)
summary(data[which(dummy==2)]$price)
data[i1]$price
data[i1]
i1 <- which(data$dummy == 2)
data[i1]
summary(data[which(dummy==2),]$price)
data[i1,]
data[i1,]$price
summary(data[i1,]$price)
predict(fitre, newdata = newdatum, interval = "confidence", level = 1 - alpha)
data <- read.table("Mexican.txt")
head(data)
attach(data)
x11()
par(mfrow = c(1,3))
boxplot(price ~ type.food, data=data)
boxplot(price ~ area, data=data)
boxplot(price ~ type.food:area, data=data)
Ps <- c(shapiro.test(price[type.food == "Fajitas" & area=="Cancun"])$p,
shapiro.test(price[type.food == "Fajitas" & area=="Guanajato"])$p,
shapiro.test(price[type.food == "Fajitas" & area=="MexicoCity"])$p,
shapiro.test(price[type.food == "Tacos" & area=="Cancun"])$p,
shapiro.test(price[type.food == "Tacos" & area=="Guanajato"])$p,
shapiro.test(price[type.food == "Tacos" & area=="MexicoCity"])$p)
Ps
bartlett.test(price,type.food:area)
g <- length(levels(type.food))
b <- length(levels(area))
n <- length(price)/(g*b)
M       <- mean(price)
Mtype   <- tapply(price, type.food, mean)
Marea   <- tapply(price, area, mean)
Mmix    <- tapply(price, type.food:area, mean)
fit2way <- aov(price ~ type.food + area + type.food:area)
summary.aov(fit2way)
fit2wayred <- aov(price ~ type.food + area)
summary.aov(fit2wayred)
fit <- aov(price ~ area)
summary.aov(fit)
# c)
k <- 3
alpha=.01
ng <- table(area)
treat <- levels(area)
N <- dim(data)[1]
Media   <- mean(price)
Mediag  <- tapply(price, area, mean)
dof <- fit$df
Spooled <- sum(fit$residuals^2)/dof
ICrange=NULL
for(i in 1:(b-1)) {
for(j in (i+1):b) {
print(paste(treat[i],"-",treat[j]))
print(as.numeric(c(Mediag[i]-Mediag[j] - qt(1-alpha/(2*k), dof) * sqrt( Spooled * ( 1/ng[i] + 1/ng[j] )),
Mediag[i]-Mediag[j] + qt(1-alpha/(2*k), dof) * sqrt( Spooled * ( 1/ng[i] + 1/ng[j] )))))
ICrange=rbind(ICrange,as.numeric(c(Mediag[i]-Mediag[j] - qt(1-alpha/(2*k), dof) * sqrt( Spooled * ( 1/ng[i] + 1/ng[j] )),
Mediag[i]-Mediag[j] + qt(1-alpha/(2*k), dof) * sqrt( Spooled * ( 1/ng[i] + 1/ng[j] )))))
}
}
rm(list = ls())
data <- read.table("Precolombian.txt")
head(data)
load("mcshapiro.test.RData")
i1 <- which(data$Civilization == "Aztec")
i2 <- which(data$Civilization == "Maya")
i3 <- which(data$Civilization == "Toltec")
mcshapiro.test(data[i1,1:2])
mcshapiro.test(data[i2,1:2])
mcshapiro.test(data[i3,1:2])
plot(data[,1:2], col = data$Civilization)
cov(data[i1,1:2])
cov(data[i2,1:2])
cov(data[i3,1:2])
prior <- c(0.2,0.1,0.7)
n1 <- length(i1)
n2 <- length(i2)
n3 <- length(i3)
n <- n1+n2+n3
g <- 3
precolom <- data[,1:2]
m <-  colMeans(precolom)
m1 <- colMeans(precolom[i1,])
m2 <- colMeans(precolom[i2,])
m3 <- colMeans(precolom[i3,])
S1 <- cov(precolom[i1,])
S2 <- cov(precolom[i2,])
S3 <- cov(precolom[i3,])
Sp  <- ((n1-1)*S1+(n2-1)*S2+(n3-1)*S3)/(n-g)
library(MASS)
qda.prec <- qda(precolom, data$Civilization, prior = prior)
Qda.prec <- predict(qda.prec, precolom)
table(classe.vera=data$Civilization, classe.allocata=Qda.prec$class)
erroriq <- (Qda.prec$class != data$Civilization)
misc <- table(classe.vera=data$Civilization, classe.allocata=Qda.prec$class)
APER <- 0
G <- 2
for(g in 1:G)
APER <- APER + sum(misc[g,-g])/sum(misc[g,]) * prior[g]
x11()
plot(precolom, pch=20)
points(precolom[i1,], col='red', pch=20)
points(precolom[i2,], col='green', pch=20)
points(precolom[i3,], col='blue', pch=20)
legend(min(precolom[,1]), max(precolom[,2]), legend=levels(species.name), fill=c('red','green','blue'))
points(qda.prec$means, col=c('red','green','blue'), pch=4, lwd=2, cex=1.5)
x  <- seq(min(precolom[,1]), max(precolom[,1]), length=200)
y  <- seq(min(precolom[,2]), max(precolom[,2]), length=200)
legend(min(precolom[,1]), max(precolom[,2]), legend=levels(data$Civilization), fill=c('red','green','blue'))
points(qda.prec$means, col=c('red','green','blue'), pch=4, lwd=2, cex=1.5)
x  <- seq(min(precolom[,1]), max(precolom[,1]), length=200)
y  <- seq(min(precolom[,2]), max(precolom[,2]), length=200)
xy <- expand.grid(Year=x, Aspect.Ratio=y)
z  <- predict(qda.prec, xy)$post
z1 <- z[,1] - pmax(z[,2], z[,3])
z2 <- z[,2] - pmax(z[,1], z[,3])
z3 <- z[,3] - pmax(z[,1], z[,2])
contour(x, y, matrix(z1, 200), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z2, 200), levels=0, drawlabels=F, add=T)
contour(x, y, matrix(z3, 200), levels=0, drawlabels=F, add=T)
newdatum <- data.frame(Year = 986, Aspect.Ratio = 1.4)
predict(qda.prec, newdatum)
APER
morning <- read.table("Morning.txt")
head(morning)
evening <- read.table("Evening.txt")
head(evening)
D <- data.frame(MEX.OAX=morning[,1]-evening[,1], OAX.MEX=morning[,2]-evening[,2])
D
load("mcshapiro.test.RData")
mcshapiro.test(D)
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0,0, pch=19, col='grey35')
n <- dim(D)[1]
p <- dim(D)[2]
D.mean   <- sapply(D,mean)
D.cov    <-  cov(D)
D.invcov <- solve(D.cov)
alpha   <- .01
delta.0 <- c(0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject at 5%
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
# b)
k <- 4 # number of intervals I want to compute (set in advance)
alpha   <- .01
cfr.t <- qt(1-alpha/(2*k),n-1)
mcshapiro.test(morning)
x.mean <- sapply(morning,mean)
x.mean <- c(x.mean, sapply(evening,mean))
x.cov <- c(var(morning$MEX.OAX), var(morning$OAX.MEX), var(evening$MEX.OAX), var(evening$OAX.MEX))
Bf <- NULL
for (i in 1:k)
Bf <- rbind(Bf, cbind(inf = x.mean[i] - cfr.t*sqrt(x.cov[i]/n),
center = x.mean[i],
sup = x.mean[i] + cfr.t*sqrt(x.cov[i]/n)))
Bf
x.cov <- c(var(morning$MEX.OAX), var(morning$OAX.MEX), var(evening$MEX.OAX), var(evening$OAX.MEX))
x.cov
cfr.t
Bf
morning <- read.table("Morning.txt")
head(morning)
head(evening)
evening <- read.table("Evening.txt")
D <- data.frame(MEX.OAX=morning[,1]-evening[,1], OAX.MEX=morning[,2]-evening[,2])
D
load("mcshapiro.test.RData")
n <- dim(D)[1]
p <- dim(D)[2]
D.mean   <- sapply(D,mean)
D.cov    <-  cov(D)
D.invcov <- solve(D.cov)
alpha   <- .01
delta.0 <- c(0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject at 5%
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
# b)
k <- 4 # number of intervals I want to compute (set in advance)
alpha   <- .01
cfr.t <- qt(1-alpha/(2*k),n-1)
x.mean <- sapply(morning,mean)
x.mean <- c(x.mean, sapply(evening,mean))
x.cov <- c(var(morning$MEX.OAX), var(morning$OAX.MEX), var(evening$MEX.OAX), var(evening$OAX.MEX))
Bf <- NULL
for (i in 1:k)
Bf <- rbind(Bf, cbind(inf = x.mean[i] - cfr.t*sqrt(x.cov[i]/n),
center = x.mean[i],
sup = x.mean[i] + cfr.t*sqrt(x.cov[i]/n)))
Bf
# c)
t.test(morning$OAX.MEX, mu = 90, alternative = "greater")
