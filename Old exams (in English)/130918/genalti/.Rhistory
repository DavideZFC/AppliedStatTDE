vif(mod2)
# modello migliorato
sigma <- sd(mod2$residuals)
# sigma = 8.395469
# alpha0 = 32.5155           residents during weekends
# alpha1 = 32.5155 - 15.0697 residents during weekdays
# beta = 14.9183             tourists (always)
tm <- which.max(t*cos(4*pi*t/365)) # 122
isweekday <- g[122]
t.max <- data.frame(t =  tm, g = isweekday)
Conf <- predict(mod2, t.max, interval='confidence', level=1-0.05)
Conf
# abbiamo verificato che i residui si distribuiscono in modo normale con varianza sigma^2: possiamo procedere
# alla prediction per t = 238
t0.new <- data.frame(t = 238, g = 1)
Pred <- predict(mod2, t0.new, interval='prediction', level=1-0.05)
# lwr          fit          upr
# 10.73324     27.38931     44.04538
# (Intercept)                 32.5155     1.3006   25.00   <2e-16 ***
#   g                          -15.0697     1.2524  -12.03   <2e-16 ***
#   I(1 + cos(4 * pi * t/365))  14.9183     0.7414   20.12   <2e-16 ***
#   ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
#
# Residual standard error: 8.43 on 242 degrees of freedom
# Multiple R-squared:  0.6943,	Adjusted R-squared:  0.6918
# F-statistic: 274.8 on 2 and 242 DF,  p-value: < 2.2e-16
#
plot(t, w)
# lwr          fit          upr
# 10.73324     27.38931     44.04538
abline(h = 44.04)
abline(v = 238)
abline(h = 10.7)
t.max <- data.frame(t =  200, g = isweekday)
Conf <- predict(mod2, t.max, interval='confidence', level=1-0.05)
Conf
abline(v = 180)
t.max <- data.frame(t =  175, g = isweekday)
Conf <- predict(mod2, t.max, interval='confidence', level=1-0.05)
Conf
t.max <- data.frame(t =  175, g = isweekday)
Conf <- predict(mod2, t.max, interval='prediction', level=1-0.05)
Conf
t.max <- data.frame(t =  350, g = isweekday)
Conf <- predict(mod2, t.max, interval='prediction', level=1-0.05)
Conf
df <- read.table("IAMG.txt")
head(df)
setwd("C:/Users/gianm/Desktop/TDEApplied/Old exams (in English)/130918")
df <- read.table("IAMG.txt")
head(df)
load("mcshapiro.test.Rdata")
mcshapiro.test(df)
D.mean   <- sapply(df,mean)
D.cov    <- cov(df)
D.invcov <- solve(D.cov)
D.mean
# siamo di fronte ad una normale multivariata
n <- dim(df)[1]
alpha   <- .05
delta.0 <- D.mean # center
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2)
p <- dim(df)[2]
help(ellipse)
library(ellipse)
library('ellipse')
alpha   <- .05
delta.0 <- D.mean # center
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
eig(D.cov)
eigen(D.cov)
eigen(D.cov) # directions
eigen(D.cov)$values # directions
eigen(D.cov)$vectors # directions
sqrt(cfr.fisher)*sqrt(eigen(D.cov/n)$values) # lengths of semiaxes
D.mean # center
eigen(D.cov)$vectors # directions
sqrt(cfr.fisher)*sqrt(eigen(D.cov/n)$values) # lengths of semiaxes
for(i in 1:3){
IC = c(D.mean[i] - sqrt(cfr.fisher*D.cov[i,i]/n),D.mean[i] + sqrt(cfr.fisher*D.cov[i,i]/n))
print(paste(paste("IC",i),IC))
}
dimnames(IC) <-c('inf', 'sup')
names(IC) <-c('inf', 'sup')
for(i in 1:3){
IC = c(D.mean[i] - sqrt(cfr.fisher*D.cov[i,i]/n),D.mean[i] + sqrt(cfr.fisher*D.cov[i,i]/n))
names(IC) <-c('inf', 'sup')
print(IC)
}
# 9.914474 4.218786 2.708017
for(i in 1:3){
IC = c(D.mean[i] - sqrt(cfr.fisher*D.cov[i,i]/n),D.mean[i],D.mean[i] + sqrt(cfr.fisher*D.cov[i,i]/n))
names(IC) <-c('inf', 'center','sup')
print(IC)
}
head(df)
diff <- df$No.show - 0.1*df$Registered
t.test(diff)
rm(list = ls())
data = read.table("IAMG.txt")
head(data)
load("mcshapiro.test.RData")
n <- dim(data)[1]
p <- dim(data)[2]
mcshapiro.test(data)
m <- sapply(data, mean)
Sigma <- cov(data)
eigen(Sigma)
# Direction of the axes:
eigen(Sigma)$vectors
alpha <- 0.05
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
# Length of the semi-axes of the ellipse:
r <- sqrt(cfr.fisher)
r*sqrt(eigen(Sigma/n)$values)
# b)
c1 <- m[1]
l1 <- m[1]-sqrt(cfr.fisher*Sigma[1,1]/n)
r1 <- m[1]+sqrt(cfr.fisher*Sigma[1,1]/n)
c2 <- m[2]
l2 <- m[2]-sqrt(cfr.fisher*Sigma[2,2]/n)
r2 <- m[2]+sqrt(cfr.fisher*Sigma[2,2]/n)
c3 <- m[3]
l3 <- m[3]-sqrt(cfr.fisher*Sigma[3,3]/n)
r3 <- m[3]+sqrt(cfr.fisher*Sigma[3,3]/n)
T2 <- cbind(inf = c(l1,l2,l3), center = c(c1,c2,c3), sup = c(r1,r2,r3))
T2
# c)
t.test(0.1*data$Registered - data$No.show, alternative = "two.sided", mu = 0)
diff <- df$No.show - 0.1*df$Registered
t.test(diff)
load("mcshapiro.test.Rdata")
df <- read.table("IAMG.txt")
head(df)
mcshapiro.test(df)
# siamo di fronte ad una normale multivariata
n <- dim(df)[1]
p <- dim(df)[2]
D.mean   <- sapply(df,mean)
D.cov    <- cov(df)
D.invcov <- solve(D.cov)
alpha   <- .05
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
D.mean # center
# Registered       Talk    No.show
# 249.44     119.04      23.12
eigen(D.cov)$vectors # directions
#            [,1]       [,2]        [,3]
# [1,] 0.98711610  0.1554660 -0.03784352
# [2,] 0.09129046 -0.7414562 -0.66476221
# [3,] 0.13140723 -0.6527427  0.74609588
sqrt(cfr.fisher)*sqrt(eigen(D.cov/n)$values) # lengths of semiaxes
# 9.914474 4.218786 2.708017
for(i in 1:3){
IC = c(D.mean[i] - sqrt(cfr.fisher*D.cov[i,i]/n),D.mean[i],D.mean[i] + sqrt(cfr.fisher*D.cov[i,i]/n))
names(IC) <-c('inf', 'center','sup')
print(IC)
}
diff <- df$No.show - 0.1*df$Registered
t.test(diff)
mean(diff)
mean(1/diff)
diff <- 0.1*df$Registered - df$No.show
t.test(diff)
mean(1/diff)
df <- read.table("waiting.txt")
head(df)
help("anova")
head(df)
attach(df)
mod <- lm(waiting ~ course + city + course:city)
detach(df)
anova(mod)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
qqnorm(waiting)
attach(df)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
qqnorm(waiting)
shapiro.test(waiting)
shapiro.test(waiting[course == i])
for (i in levels(course)){
shapiro.test(waiting[course == i])
}
shapiro.test(waiting[course == i])$p
for (i in levels(course)){
pval <- shapiro.test(waiting[course == i])$p
print(pval)
}
levels(course)
levels(city)
# 0.753786  0.5482351  0.3779857 normalità rispetto ad ogni course
for (i in levels(city)){
pval <- shapiro.test(waiting[city == i])$p
print(pval)
}
qqnorm(waiting[city == i])
qqnorm(waiting[city == 'Bucarest'])
# 0.753786  0.5482351  0.3779857 normalità rispetto ad ogni course
for (i in levels(city)){
pval <- shapiro.test(waiting[city == i])$p
print(pval)
}
help("bartlett.test")
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(mod$formula)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(mod)
detach(df)
df <- read.table("waiting.txt")
head(df)
attach(df)
levels(course)
levels(city)
mod <- lm(waiting ~ course + city + course:city)
anova(mod)
#
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(mod$formula)
qqnorm(waiting)
shapiro.test(waiting)
for (i in levels(course)){
pval <- shapiro.test(waiting[course == i])$p
print(pval)
}
# 0.753786  0.5482351  0.3779857 normalità rispetto ad ogni course
var.test()
for (i in levels(city)){
pval <- shapiro.test(waiting[city == i])$p
print(pval)
}
# 2.056531e-08  3.663365e-08 non normalità rispetto alle città
# course sembra molto influente, non si può dire lo stesso della città e della loro interazione, peraltro
# i dati non sono nemmeno normali rispetto alle città quindi tolgo quella variabile
detach(df)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(mod$formula, data = df)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(waiting ~ course + city + course:city, data = df)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(waiting ~ course , data = df)
bartlett.test(waiting ~ course:city, data = df)
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(waiting ~ course, data = df)
bartlett.test(waiting ~ city, data = df)
var.test(waiting ~ course, data = df)
bartlett.test(waiting ~ course, data = df)
bartlett.test(waiting ~ city, data = df)
df <- read.table("waiting.txt")
head(df)
attach(df)
levels(course)
levels(city)
mod <- lm(waiting ~ course + city + course:city)
anova(mod)
#
# Analysis of Variance Table
#
# Response: waiting
# Df Sum Sq Mean Sq  F value Pr(>F)
# course        2 100022   50011 859.5448 <2e-16 ***
# city          1      1       1   0.0137 0.9068
# course:city   2     65      33   0.5594 0.5726
# Residuals   174  10124      58
# ---
#   Signif. codes:  0 ‘***’ 0.001 ‘**’ 0.01 ‘*’ 0.05 ‘.’ 0.1 ‘ ’ 1
bartlett.test(waiting ~ course, data = df)
bartlett.test(waiting ~ city, data = df)
# ok ho stessa varianza
qqnorm(waiting)
shapiro.test(waiting)
for (i in levels(course)){
pval <- shapiro.test(waiting[course == i])$p
print(pval)
}
# 0.753786  0.5482351  0.3779857 normalità rispetto ad ogni course
for (i in levels(city)){
pval <- shapiro.test(waiting[city == i])$p
print(pval)
}
# 2.056531e-08  3.663365e-08 non normalità rispetto alle città
# course sembra molto influente, non si può dire lo stesso della città e della loro interazione, peraltro
# i dati non sono nemmeno normali rispetto alle città quindi tolgo quella variabile
detach(df)
summary.aov(fit.aov1)
df <- read.table("Sailing.txt")
head(df)
df <- read.table("Sailing.txt")
head(df)
head(df)
plot(water, sailing.time, col = type)
attach(df)
plot(water, sailing.time, col = type)
library(MASS)
detach(df)
plot(df$water, df$sailing.time, col = df$type)
class <- lda(df[,1:2],df[,3])
summary(class)
pred <- predict(class, df[,1:2])
table(pred$class, df[,3])
pred$x
class$svd
class$prior
class$lev
pred$posterior
pred$posterior[1]
pred$x
plot(df$water, df$sailing.time, col = pred$class)
plot(df$water, df$sailing.time, col = df$type)
plot(df$water, df$sailing.time, col = pred$class)
plot(df$water, df$sailing.time, col = pred$class, pch = 16)
plot(df$water, df$sailing.time, col = df$type, pch = 16)
plot(df$water, df$sailing.time, col = pred$class, pch = 16)
class2 <- qda(df[,1:2],df[,3])
pred2 <- predict(class2, df[,1:2])
table(pred2$class, df[,3])
pred2$posterior[1]
plot(df$water, df$sailing.time, col = pred2$class, pch = 16)
plot(df$water, df$sailing.time, col = pred$class, pch = 16)
plot(df$water, df$sailing.time, col = pred2$class, pch = 16)
errors <- (pred$class != df[,3])
errors
sum(errors)
APER   <- sum(errors)/length(df[,3])
APER
APER
errors2 <- (pred2$class != df[,3])
APER2   <- sum(errors)/length(df[,3])
APER2
head(df)
new <- data.frame(water = 35, sailing.time = 168)
guess1 <- predict(class, new)
guess2 <- predict(class2, new)
guess1
guess2
df <- read.table("Lumieres.txt")
head(df)
r <- ifelse(rain == 'yes', 1, 0)
attach(df)
r <- ifelse(rain == 'yes', 1, 0)
r
mod <- lm(N.people ~  r + day + day^2 + temp)
detach(df)
df <- read.table("Lumieres.txt")
head(df)
attach(df)
r <- ifelse(rain == 'yes', 1, 0)
mod <- lm(N.people ~  r + day + day^2 + temperature)
detach(df)
summary(mod)
coef(mod)
mod <- lm(N.people ~  r + day + day.2 + temperature)
df <- read.table("Lumieres.txt")
head(df)
attach(df)
r <- ifelse(rain == 'yes', 1, 0)
day.2 <- day^2
mod <- lm(N.people ~  r + day + day.2 + temperature)
detach(df)
summary(mod)
coefs <- coef(mod)
coefs
beta.00 <- coefs[1]
beta.01 <- coefs[1] + coefs[2]
beta.1  <- coefs[3]
beta.2  <- coefs[4]
beta.3  <- coefs[5]
plot(mod)
par(mfrow = c(2,2))
plot(mod)
shapiro.test(mod$residuals)
sigma   <- sd(mod$residuals)
shapiro.test(mod$residuals)
par(mfrow = c(2,2))
help("linearHypothesis")
linearHypothesis(mod, c(0,0,1,0,0), 0)
summary(mod)
mod2 <- <- lm(N.people ~  day + day.2)
summary(mod2)
mod2  <- lm(N.people ~  day + day.2)
summary(mod2)
# anyways temperature and presence of rain seem not to influence the model
attach(df)
mod2 <- lm(N.people ~  day + day.2)
detach(df)
summary(mod2)
coefs(mod2)
coefs2 <- coef(mod2)
sigma   <- sd(mod2$residuals)
plot(mod2)
par(mfrow = c(2,2))
plot(mod2)
shapiro.test(mod2$residuals)
plot(day, N.people)
# anyways temperature and presence of rain seem not to influence the model
attach(df)
plot(day, N.people)
plot(day + day.2, N.people)
plot(beta.0 + beta.1*day + beta.2*day.2, N.people)
coefs2 <- coef(mod2)
beta.0  <- coefs[1]
beta.1  <- coefs[2]
beta.2  <- coefs[3]
sigma   <- sd(mod2$residuals)
plot(beta.0 + beta.1*day + beta.2*day.2, N.people)
plot(beta.0 + beta.1*day + beta.2*day^2, N.people)
abline(mod2)
rm(list = ls())
data = read.table("Lumieres.txt")
head(data)
data$rain = as.factor(data$rain)
rm <- lm(N.people ~ rain + day + I(day^2) + temperature,data = data)
summary(rm)
df <- read.table("Lumieres.txt")
head(df)
attach(df)
r <- ifelse(rain == 'yes', 1, 0)
day.2 <- day^2
mod <- lm(N.people ~  r + day + day.2 + temperature)
detach(df)
coefs <- coef(mod)
# (Intercept)
summary(mod)
linearHypothesis(rmr,A,b)
rm1 <- lm(N.people ~ I(day^2 - 122*day), data = data)
summary(rm1)
rmr <- lm(N.people ~ day + I(day^2),data = data)
summary(rmr)
A <- c(0,1,2*61)
b <- 0
linearHypothesis(rmr,A,b)
