C <- matrix(c(-1, 1,
-1, 0), 2, 3, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0,0)
Md <- C %*% M
C
C <- matrix(c(-1, 1,
-1, 0), 2, 3, byrow=T)
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0,0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
df <- read.table('bento.txt')
attach(df)
A <- sashimi_hanami
B <- sashimi_nohanami
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
A <- okashi_hanami
B <- okashi_nohanami
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
A <- vegetables_hanami
B <- vegetables_nohanami
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
shapiro.test(A) #ok
shapiro.test(B) #ok
# Simultaneous T2 intervals
IC.T2 <- cbind( Md - sqrt(cfr.fisher*diag(Sd)/n) , Md, Md + sqrt(cfr.fisher*diag(Sd)/n) )
IC.T2
# Bonferroni intervals
k     <- q - 1   # number of increments (i.e., dim(C)[1])
cfr.t <- qt(1-alpha/(2*k),n-1)
IC.BF <- cbind( Md - cfr.t*sqrt(diag(Sd)/n) , Md, Md + cfr.t*sqrt(diag(Sd)/n) )
IC.BF
x11()
matplot(t(matrix(1:3,3,3)),t(IC.BF), type='b',pch='',xlim=c(0,4),xlab='',ylab='', main='Confidence intervals')
segments(matrix(1:3,3,1),IC.BF[,1],matrix(1:3,3,1),IC.BF[,3], col='orange', lwd=2)
points(1:3, IC.BF[,2], col='orange', pch=16)
points(1:3+.05, delta.0, col='black', pch=16)
segments(matrix(1:3+.1,3,1),IC.T2[,1],matrix(1:3+.1,3,1),IC.T2[,3], col='blue', lwd=2)
points(1:3+.1,IC.T2[,2], col='blue', pch=16)
x11()
matplot(t(matrix(1:3,3,3)),t(IC.BF), type='b',pch='',xlim=c(0,4),xlab='',ylab='', main='Confidence intervals')
segments(matrix(1:3,3,1),IC.BF[,1],matrix(1:3,3,1),IC.BF[,3], col='orange', lwd=2)
points(1:2, IC.BF[,2], col='orange', pch=16)
points(1:2+.05, delta.0, col='black', pch=16)
segments(matrix(1:2+.1,2,1),IC.T2[,1],matrix(1:2+.1,2,1),IC.T2[,3], col='blue', lwd=2)
points(1:2+.1,IC.T2[,2], col='blue', pch=16)
IC.BF
A <- okashi_hanami
B <- okashi_nohanami
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
# Simultaneous T2 intervals
IC.T2 <- cbind( Md - sqrt(cfr.fisher*diag(Sd)/n) , Md, Md + sqrt(cfr.fisher*diag(Sd)/n) )
IC.T2
# Bonferroni intervals
k     <- q - 1   # number of increments (i.e., dim(C)[1])
cfr.t <- qt(1-alpha/(2*k),n-1)
IC.BF <- cbind( Md - cfr.t*sqrt(diag(Sd)/n) , Md, Md + cfr.t*sqrt(diag(Sd)/n) )
IC.BF
df <- read.table('bento.txt')
attach(df)
A <- sashimi_hanami
B <- sashimi_nohanami
detach(df)
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
# It is implicitely asking for confidence intervals on the components
# (for the mean of the increments after 8 hours, 16 hours and 24 hours)
# Simultaneous T2 intervals
IC.T2 <- cbind( Md - sqrt(cfr.fisher*diag(Sd)/n) , Md, Md + sqrt(cfr.fisher*diag(Sd)/n) )
IC.T2
# Bonferroni intervals
k     <- q - 1   # number of increments (i.e., dim(C)[1])
cfr.t <- qt(1-alpha/(2*k),n-1)
IC.BF <- cbind( Md - cfr.t*sqrt(diag(Sd)/n) , Md, Md + cfr.t*sqrt(diag(Sd)/n) )
IC.BF
df <- read.table('bento.txt')
attach(df)
A <- rice_hanami
B <- rice_nohanami
detach(df)
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
# It is implicitely asking for confidence intervals on the components
# (for the mean of the increments after 8 hours, 16 hours and 24 hours)
# Simultaneous T2 intervals
IC.T2 <- cbind( Md - sqrt(cfr.fisher*diag(Sd)/n) , Md, Md + sqrt(cfr.fisher*diag(Sd)/n) )
IC.T2
# Bonferroni intervals
k     <- q - 1   # number of increments (i.e., dim(C)[1])
cfr.t <- qt(1-alpha/(2*k),n-1)
IC.BF <- cbind( Md - cfr.t*sqrt(diag(Sd)/n) , Md, Md + cfr.t*sqrt(diag(Sd)/n) )
IC.BF
df <- read.table('bento.txt')
attach(df)
A <- vegetables_hanami
B <- vegetables_nohanami
detach(df)
red.df <- data.frame(A, B)
mcshapiro.test(red.df)
x11()
matplot(t(red.df), type='l')
n <- dim(red.df)[1]
q <- dim(red.df)[2]
M <- sapply(red.df,mean)
M
S <- cov(red.df)
S
C <- matrix(c(-1, 1), 1, 2, byrow=T)
C
# Test: H0: C%*%mu == 0 vs H1: C%*%mu != 0
alpha   <- .05
delta.0 <- c(0)
Md <- C %*% M
Sd <- C %*% S %*% t(C)
Sdinv <- solve(Sd)
T2 <- n * t( Md - delta.0 ) %*% Sdinv %*% ( Md - delta.0 )
cfr.fisher <- ((q-1)*(n-1)/(n-(q-1)))*qf(1-alpha,(q-1),n-(q-1))
T2 < cfr.fisher
T2
cfr.fisher
# T2 is much higher than cfr.fisher => the p-value will be very small
P <- 1-pf(T2*(n-(q-1))/((q-1)*(n-1)),(q-1),n-(q-1))
P
# It is implicitely asking for confidence intervals on the components
# (for the mean of the increments after 8 hours, 16 hours and 24 hours)
# Simultaneous T2 intervals
IC.T2 <- cbind( Md - sqrt(cfr.fisher*diag(Sd)/n) , Md, Md + sqrt(cfr.fisher*diag(Sd)/n) )
IC.T2
# Bonferroni intervals
k     <- q - 1   # number of increments (i.e., dim(C)[1])
cfr.t <- qt(1-alpha/(2*k),n-1)
IC.BF <- cbind( Md - cfr.t*sqrt(diag(Sd)/n) , Md, Md + cfr.t*sqrt(diag(Sd)/n) )
IC.BF
#####################################################################################################################
D <- data.frame(df$rice_hanami-df$rice_nohanami, df$sashimi_hanami-df$sashimi_nohanami, df$vegetables_hanami-df$vegetables_nohanami, df$okashi_hanami-df$okashi_nohanami)
D
head(D)
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0,0, pch=19, col='grey35
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0,0, pch=19, col='grey35
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0,0, pch=19, col='grey35
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0,0, pch=19, col='grey35
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35)
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35')
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35')
#####################################################################################################################
D <- data.frame(rice = df$rice_hanami-df$rice_nohanami, sashimi = df$sashimi_hanami-df$sashimi_nohanami, vegetables = df$vegetables_hanami-df$vegetables_nohanami, okashi = df$okashi_hanami-df$okashi_nohanami)
head(D)
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35')
#####################################################################################################################
D <- data.frame(rice = df[,1]-df[,5], sashimi = df[,2]-df[,6], vegetables = df[,3]-df[,7], okashi = df[,4]-df[,8])
head(D)
x11()
plot(D, asp=1, pch=19, main='Dataset of Differences')
abline(h=0, v=0, col='grey35')
points(0, 0, pch=19, col='grey35')
plot(df)
# Test the Gaussian assumption (on D!)
mcshapiro.test(D)
n <- dim(D)[1]  # 11
p <- dim(D)[2]  #  2
D.mean   <- sapply(D,mean)
D.cov    <- cov(D)
D.invcov <- solve(D.cov)
alpha   <- .05
delta.0 <- c(0,0)
D.T2 <- n * (D.mean-delta.0) %*% D.invcov %*% (D.mean-delta.0)
D.T2
cfr.fisher <- ((n-1)*p/(n-p))*qf(1-alpha,p,n-p)
cfr.fisher
D.T2 < cfr.fisher # FALSE: we reject H0 at level 5%
P <- 1-pf(D.T2*(n-p)/(p*(n-1)), p, n-p)
P
matplot(D, type = 'l')
# Ellipsoidal confidence region with confidence level 95%
x11()
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2)
points(delta.0[1], delta.0[2], pch=16, col='grey35', cex=1.5)
abline(h=delta.0[1], v=delta.0[2], col='grey35')
# Ellipsoidal confidence region with confidence level 99%
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt((n-1)*p/(n-p)*qf(1-0.01,p,n-p)),lty=2,col='grey',lwd=2)
# What if we set the radius as the quantile of order 1-pval?
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt((n-1)*p/(n-p)*qf(1-as.numeric(P),p,n-p)),lty=1,col='dark grey',lwd=2)
library(car)
# Ellipsoidal confidence region with confidence level 95%
x11()
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2)
points(delta.0[1], delta.0[2], pch=16, col='grey35', cex=1.5)
abline(h=delta.0[1], v=delta.0[2], col='grey35')
# Ellipsoidal confidence region with confidence level 99%
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt((n-1)*p/(n-p)*qf(1-0.01,p,n-p)),lty=2,col='grey',lwd=2)
# What if we set the radius as the quantile of order 1-pval?
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt((n-1)*p/(n-p)*qf(1-as.numeric(P),p,n-p)),lty=1,col='dark grey',lwd=2)
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-200,200))
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2)
D.mean
### Simultanouse T2 intervals
IC.T2.DBOD <- c( D.mean[1]-sqrt(cfr.fisher*D.cov[1,1]/n) , D.mean[1], D.mean[1]+sqrt(cfr.fisher*D.cov[1,1]/n) )
IC.T2.DSS  <- c( D.mean[2]-sqrt(cfr.fisher*D.cov[2,2]/n) , D.mean[2], D.mean[2]+sqrt(cfr.fisher*D.cov[2,2]/n) )
T2 <- rbind(IC.T2.DBOD, IC.T2.DSS)
dimnames(T2)[[2]] <- c('inf','center','sup')
T2
IC.T2.rice <- c( D.mean[1]-sqrt(cfr.fisher*D.cov[1,1]/n) , D.mean[1], D.mean[1]+sqrt(cfr.fisher*D.cov[1,1]/n) )
IC.T2.sashimi  <- c( D.mean[2]-sqrt(cfr.fisher*D.cov[2,2]/n) , D.mean[2], D.mean[2]+sqrt(cfr.fisher*D.cov[2,2]/n) )
IC.T2.vegetables  <- c( D.mean[3]-sqrt(cfr.fisher*D.cov[3,3]/n) , D.mean[3], D.mean[3]+sqrt(cfr.fisher*D.cov[3,3]/n) )
IC.T2.okashi  <- c( D.mean[4]-sqrt(cfr.fisher*D.cov[4,4]/n) , D.mean[4], D.mean[4]+sqrt(cfr.fisher*D.cov[4,4]/n) )
T2 <- rbind(IC.T2.rice, IC.T2.sashimi, IC.T2,vegetables, IC.T2.okashi)
dimnames(T2)[[2]] <- c('inf','center','sup')
T2
T2 <- rbind(IC.T2.rice, IC.T2.sashimi, IC.T2,vegetables, IC.T2.okashi)
T2 <- rbind(IC.T2.rice, IC.T2.sashimi, IC.T2.vegetables, IC.T2.okashi)
dimnames(T2)[[2]] <- c('inf','center','sup')
T2
x11()
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2, col='grey')
abline(v = T2[1,1], col='red', lwd=1, lty=2)
abline(v = T2[1,3], col='red', lwd=1, lty=2)
abline(h = T2[2,1], col='red', lwd=1, lty=2)
abline(h = T2[2,3], col='red', lwd=1, lty=2)
segments(IC.T2.DBOD[1],0,IC.T2.DBOD[3],0,lty=1,lwd=2,col='red')
segments(0,IC.T2.DSS[1],0,IC.T2.DSS[3],lty=1,lwd=2,col='red')
T2
D.T2
D <- as.matrix(D)
theta   <- seq(0, pi - pi/180, by = pi/180)
T2.d      <- NULL
Centerf  <- NULL
Maxf     <- NULL
Minf     <- NULL
for(i in 1:length(theta))
{
a   <- c(cos(theta[i]), sin(theta[i]))
t2  <- ( mean(D %*% a) - (delta.0 %*% a) )^2 / ( var(D %*% a) / n )
T2.d  <- c(T2.d, t2)
centerf  <- D.mean %*% a
maxf     <- D.mean %*% a + sqrt( t(a) %*% D.cov%*% a / n) * sqrt(cfr.fisher)
minf     <- D.mean %*% a - sqrt( t(a) %*% D.cov%*% a / n) * sqrt(cfr.fisher)
Centerf  <- c(Centerf, centerf)
Maxf     <- c(Maxf, maxf)
Minf     <- c(Minf, minf)
}
x11(width=21, height=7)
par(mfrow=c(1,3))
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
abline(h=delta.0[1], v=delta.0[2], col='red', lty=3)
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2, col='grey')
segments(IC.T2.DBOD[1],0,IC.T2.DBOD[3],0,lty=1,lwd=2,col='red')
segments(0,IC.T2.DSS[1],0,IC.T2.DSS[3],lty=1,lwd=2,col='red')
x.min <- IC.worst[1]*worst
x.max <- IC.worst[3]*worst
segments(x.min[1],x.min[2],x.max[1],x.max[2],lty=1,lwd=2,col='forestgreen')
abline(0,m1, col='forestgreen',lty=3)
points(delta.0[1], delta.0[2], pch=16, col='black')
plot(theta, Centerf, main = 'Simultaneous T2 confidence intervals', ylim = c(-30,35), col = 'grey25', type='l',ylab='IC')
for(i in 1:length(theta))
{lines(c(theta[i], theta[i]), c(Minf[i], Maxf[i]), col = 'grey75')}
lines(c(theta[1], theta[1]), c(Minf[1], Maxf[1]), col = 'red', lwd=2)
lines(c(theta[91], theta[91]), c(Minf[91], Maxf[91]), col = 'red', lwd=2)
lines(c(theta[which.max(T2.d)], theta[which.max(T2.d)]), c(Minf[which.max(T2.d)], Maxf[which.max(T2.d)]), col = 'forestgreen', lwd=2)
abline(h=0, col='black')
lines(theta, Minf, col = 'red', lty = 2)
lines(theta, Maxf, col = 'red', lty = 2)
x11(width=21, height=7)
par(mfrow=c(1,3))
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
abline(h=delta.0[1], v=delta.0[2], col='red', lty=3)
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2, col='grey')
segments(IC.T2.rice[1],0,IC.T2.rice[3],0,lty=1,lwd=2,col='red')
segments(0,IC.T2.okashi[1],0,IC.T2.okashi[3],lty=1,lwd=2,col='red')
x.min <- IC.worst[1]*worst
x.max <- IC.worst[3]*worst
segments(x.min[1],x.min[2],x.max[1],x.max[2],lty=1,lwd=2,col='forestgreen')
abline(0,m1, col='forestgreen',lty=3)
points(delta.0[1], delta.0[2], pch=16, col='black')
plot(theta, Centerf, main = 'Simultaneous T2 confidence intervals', ylim = c(-30,35), col = 'grey25', type='l',ylab='IC')
for(i in 1:length(theta))
{lines(c(theta[i], theta[i]), c(Minf[i], Maxf[i]), col = 'grey75')}
lines(c(theta[1], theta[1]), c(Minf[1], Maxf[1]), col = 'red', lwd=2)
lines(c(theta[91], theta[91]), c(Minf[91], Maxf[91]), col = 'red', lwd=2)
lines(c(theta[which.max(T2.d)], theta[which.max(T2.d)]), c(Minf[which.max(T2.d)], Maxf[which.max(T2.d)]), col = 'forestgreen', lwd=2)
abline(h=0, col='black')
lines(theta, Minf, col = 'red', lty = 2)
lines(theta, Maxf, col = 'red', lty = 2)
plot(theta, Centerf, main = 'Simultaneous T2 confidence intervals', ylim = c(-30,35), col = 'grey25', type='l',ylab='IC')
for(i in 1:length(theta))
{lines(c(theta[i], theta[i]), c(Minf[i], Maxf[i]), col = 'grey75')}
lines(c(theta[1], theta[1]), c(Minf[1], Maxf[1]), col = 'red', lwd=2)
lines(c(theta[91], theta[91]), c(Minf[91], Maxf[91]), col = 'red', lwd=2)
lines(c(theta[which.max(T2.d)], theta[which.max(T2.d)]), c(Minf[which.max(T2.d)], Maxf[which.max(T2.d)]), col = 'forestgreen', lwd=2)
abline(h=0, col='black')
lines(theta, Minf, col = 'red', lty = 2)
lines(theta, Maxf, col = 'red', lty = 2)
plot(D, asp=1, pch=1, main='Dataset of the Differences',ylim=c(-15,60))
abline(h=delta.0[1], v=delta.0[2], col='red', lty=3)
ellipse(center=D.mean, shape=D.cov/n, radius=sqrt(cfr.fisher), lwd=2, col='grey')
segments(IC.T2.rice[1],0,IC.T2.rice[3],0,lty=1,lwd=2,col='red')
segments(0,IC.T2.okashi[1],0,IC.T2.okashi[3],lty=1,lwd=2,col='red')
x.min <- IC.worst[1]*worst
x.max <- IC.worst[3]*worst
segments(x.min[1],x.min[2],x.max[1],x.max[2],lty=1,lwd=2,col='forestgreen')
abline(0,m1, col='forestgreen',lty=3)
points(delta.0[1], delta.0[2], pch=16, col='black')
IC.T2.rice <- c( D.mean[1]-sqrt(cfr.fisher*D.cov[1,1]/n) , D.mean[1], D.mean[1]+sqrt(cfr.fisher*D.cov[1,1]/n) )
IC.T2.sashimi  <- c( D.mean[2]-sqrt(cfr.fisher*D.cov[2,2]/n) , D.mean[2], D.mean[2]+sqrt(cfr.fisher*D.cov[2,2]/n) )
IC.T2.vegetables  <- c( D.mean[3]-sqrt(cfr.fisher*D.cov[3,3]/n) , D.mean[3], D.mean[3]+sqrt(cfr.fisher*D.cov[3,3]/n) )
IC.T2.okashi  <- c( D.mean[4]-sqrt(cfr.fisher*D.cov[4,4]/n) , D.mean[4], D.mean[4]+sqrt(cfr.fisher*D.cov[4,4]/n) )
T2 <- rbind(IC.T2.rice, IC.T2.sashimi, IC.T2.vegetables, IC.T2.okashi)
dimnames(T2)[[2]] <- c('inf','center','sup')
T2
